{"version":3,"sources":["config/config.js","services/networkService.js","api/contactsApi.js","constants/actions.js","utils/sortAlphabetical.js","store/actions/contacts.js","hooks/useAppReducer.js","utils/combineReducers.js","utils/thunk.js","store/reducers/contacts.js","store/reducers/root.js","store/context/context.js","components/ContactList/ContactDetail/ContactDetail.js","hooks/useOutsideClick.js","components/ContactList/ContactListHeader.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["config","culture","nat","alphabet","contactCount","SITE_NAME","api","axios","create","baseURL","process","REACT_APP_API_URL","getContactsApi","a","get","params","results","result","ACTIONS","CONTACTS","SET_CONTACTS","sortAlphabetical","array","forEach","item","letter","name","last","toLocaleLowerCase","push","Object","keys","index","sort","b","setSelectedTab","selectedTab","type","SET_SELECTED_TAB","payload","setContacts","contacts","slices","useAppReducer","rootReducer","useState","isInitialized","setIsInitialized","useReducer","state","normalDispatch","stateGetter","useCallback","JSON","parse","stringify","dispatch","useMemo","getState","action","Function","wrapAsync","contactInitialState","pending","reduce","acc","prop","AppContext","React","createContext","AppContextUpdate","AppContextProvider","children","selector","Provider","value","ContactDetail","ref","callback","setOpen","contact","modalStyle","contactDetail","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","style","onClick","src","picture","medium","alt","first","login","username","email","phone","location","street","city","postcode","ContactListHeader","selectTab","map","tab","availableContacts","length","ContactListItem","ContactList","useContext","apply","open","selectedContact","setSelectedContact","setModalStyle","contactsResult","data","Array","fill","top","offsetTop","offsetHeight","left","offsetLeft","width","selectContact","id","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ccd73de.chunk.js","sourcesContent":["const common = {\n    culture: {\n        nat: 'US',\n        alphabet: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'],\n    },\n    contactCount: 500,\n};\nconst dev = {\n    SITE_NAME: 'Contact List (DEV)',\n};\nconst prod = {\n    SITE_NAME: 'Contact List ',\n};\nexport const config = process.env.NODE_ENV === 'production' ? { ...common, ...prod } : { ...common, ...dev };\n","import axios from 'axios';\n\nconst api = axios.create({\n\t\n\tbaseURL: process.env.REACT_APP_API_URL ,\n});\n\nexport default api;","import { config } from 'config/config';\nimport api from 'services/networkService';\nexport const getContactsApi = async () => {\n    const result = await api.get('', { params: { results: config.contactCount, nat: config.culture.nat } });\n    return result;\n};\n","export const ACTIONS = {\n    CONTACTS: {\n        SET_CONTACTS: 'SET_CONTACTS',\n    },\n};\n","export const sortAlphabetical = (array) => {\n    ///TODO: replace with insertion sort\n    const result = {};\n    if (array == null) return result;\n    array.forEach((item) => {\n        const letter = item.name.last[0].toLocaleLowerCase();\n        if (!result[letter]) {\n            result[[letter]] = [];\n        }\n        result[letter].push(item);\n    });\n    Object.keys(result).forEach((index) => {\n        result[index].sort((a, b) => (a.name.last > b.name.last ? 1 : -1));\n    });\n    return result;\n};\n","import { getContactsApi } from 'api/contactsApi';\nimport { ACTIONS } from 'constants/actions';\nimport { sortAlphabetical } from 'utils/sortAlphabetical';\n\nexport const getContacts = () => {\n    return async (dispatch) => {\n        // dispatch()\n        const contactsResult = await getContactsApi();\n        const contacts = sortAlphabetical(contactsResult.data.results);\n        const selectedTab = Object.keys(contacts).sort()[0];\n        dispatch(setSelectedTab(selectedTab));\n        dispatch(setContacts(contacts));\n    };\n};\nexport const setSelectedTab = (selectedTab) => {\n    return {\n        type: ACTIONS.CONTACTS.SET_SELECTED_TAB,\n        payload: selectedTab,\n    };\n};\nconst setContacts = (contacts) => {\n    return {\n        type: ACTIONS.CONTACTS.SET_CONTACTS,\n        payload: contacts,\n    };\n};\n","import { useState, useMemo, useReducer } from 'react';\nimport { useCallback } from 'react/cjs/react.development';\nimport { wrapAsync } from 'utils/thunk';\n\nexport const useAppReducer = (rootReducer) => {\n    const [isInitialized, setIsInitialized] = useState(false);\n    //Creating a global State for app\n    const [state, normalDispatch] = useReducer(rootReducer, {});\n\n    const stateGetter = useCallback(() => {\n        //Deep cloning the state in order to prevent\n        // passing it by reference and having a read only value\n        return JSON.parse(JSON.stringify(state));\n    }, [state]);\n    //creating an async dispatch\n    const dispatch = useMemo(() => wrapAsync(normalDispatch, stateGetter), [normalDispatch, stateGetter]);\n    ///TODO: improve the functionality\n    if (!isInitialized) {\n        normalDispatch({ type: '@INIT' });\n        setIsInitialized(true);\n    }\n\n    return [state, dispatch];\n};\n","export const combineReducers = (slices) => (state, action) =>\n  Object.keys(slices).reduce(\n    // use for..in loop, if you prefer it\n    (acc, prop) => ({\n      ...acc,\n      [prop]: slices[prop](acc[prop], action),\n    }),\n    state\n  );\n","//Using thunk pattern in order to have async actions\nexport function wrapAsync(dispatch,getState) {\n  return function(action) {\n    if (action instanceof Function) {\n      return action(dispatch,getState)\n    }\n    return dispatch(action)\n  }\n}","import { ACTIONS } from 'constants/actions';\n\nconst contactInitialState = {\n    contacts: [],\n    pending:true\n};\nconst contacts = (state = contactInitialState, action) => {\n    switch (action.type) {\n        case ACTIONS.CONTACTS.SET_CONTACTS:\n            return {\n                ...state,\n                contacts: action.payload,\n                pending:false\n            };\n        case ACTIONS.CONTACTS.SET_SELECTED_TAB:\n            return{\n                ...state,\n                selectedTab:action.payload\n            }\n        default:\n            return state;\n    }\n};\n\nexport default contacts;\n","import { combineReducers } from 'utils/combineReducers';\nimport contacts from './contacts';\n\nconst reducers = {\n    contacts,\n};\n\nexport const rootReducer = combineReducers(reducers);\n","import { useAppReducer } from 'hooks/useAppReducer';\nimport { rootReducer } from 'store/reducers/root';\nimport React, { useCallback, useContext } from 'react';\n\nconst AppContext = React.createContext();\nconst AppContextUpdate = React.createContext();\n\nexport const useAppState = (selector) => {\n    //having the same use like redux useSelector hook\n    return useContext(AppContext).apply(null, [selector]);\n};\n\nexport const useDispatch = () => {\n    return useContext(AppContextUpdate);\n};\n\nexport const AppContextProvider = ({ children }) => {\n    const [state, dispatch] = useAppReducer(rootReducer);\n    const getState = useCallback(\n        (selector) => {\n            return selector(state);\n        },\n        [state],\n    );\n\n    const setAppContext = (action) => {\n        return dispatch(action);\n    };\n    return (\n        <AppContext.Provider value={getState}>\n            <AppContextUpdate.Provider value={setAppContext}>{children}</AppContextUpdate.Provider>\n        </AppContext.Provider>\n    );\n};\n","import { useRef } from 'react';\nimport { useOutsideClick } from 'hooks/useOutsideClick';\n\nconst ContactDetail = ({ setOpen, contact, modalStyle }) => {\n    const contactDetail = useRef(null);\n    useOutsideClick(contactDetail, () => {\n        setOpen(false);\n    });\n    return (\n        <div className=\"contact-detail\" ref={contactDetail} style={modalStyle} data-testid=\"contact-detail\">\n            <span\n                className=\"contact-detail__close-button\"\n                onClick={() => {\n                    setOpen(false);\n                }}\n            >\n                &#10006;\n            </span>\n            \n            <div className=\"contact-detail__image-container\">\n                <img className=\"contact-detail__image \" src={contact.picture.medium} alt=\"contact\" data-testid=\"user-image\"/>\n            </div>\n            <div>\n                <span className=\"contact-detail__full-name\">{`${contact.name.last}, ${contact.name.first}`}</span>\n                <div className=\"contact-detail__username-badge\">username {contact.login.username}</div>\n                <table className=\"contact-detail__info-table\">\n                    <tbody>\n                        <tr>\n                            <td>\n                                <strong>email</strong>\n                            </td>\n                            <td>{contact.email}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>phone</strong>\n                            </td>\n                            <td>{contact.phone}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>street</strong>\n                            </td>\n                            <td>{contact.location.street.name}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>city</strong>\n                            </td>\n                            <td>{contact.location.city}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>state</strong>\n                            </td>\n                            <td>{contact.location.state}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>postcode</strong>\n                            </td>\n                            <td>{contact.location.postcode}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\nexport default ContactDetail;\n","import { useEffect } from \"react\";\n\nexport const useOutsideClick = (ref, callback) => {\n  useEffect(() => {\n    // if outside of the element is clicked this function gets caleed\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        callback();\n      }\n    }\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref]);\n};\n","import { config } from 'config/config';\n\nconst ContactListHeader = ({ contacts, selectTab, selectedTab }) => {\n    return (\n        <ul className=\"contact-list-header\">\n            {config.culture.alphabet.map((tab) => {\n                tab = tab.toLocaleLowerCase();\n                const availableContacts = contacts[tab] ? contacts[tab].length : 0;\n                return (\n                    <li\n                        data-testid=\"contact-list-header-item\"\n                        key={tab}\n                        className={`contact-list-header__item px-2 py-2 ${availableContacts < 1 ? 'contact-list-header__item--disabled' : ''} ${\n                            selectedTab === tab ? 'contact-list-header__item--active' : ''\n                        }`}\n                        onClick={() => {\n                            if (availableContacts > 0) {\n                                selectTab(tab);\n                            }\n                        }}\n                    >\n                        <span>\n                            {tab}\n                            <sub className=\"ml-2\">{availableContacts}</sub>\n                        </span>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n\nexport default ContactListHeader;\n","const ContactListItem = ({ contact, onClick }) => {\n    return (\n        <li className=\"contact-list__item \" onClick={onClick} data-testid=\"contact-list-item\">\n            {`${contact.name.last}, ${contact.name.first}`}\n        </li>\n    );\n};\nexport default ContactListItem;\n","import { useEffect, useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { getContacts, setSelectedTab } from 'store/actions/contacts';\nimport { useAppState, useDispatch } from 'store/context/context';\nimport ContactDetail from './ContactDetail/ContactDetail';\nimport ContactListHeader from './ContactListHeader';\nimport ContactListItem from './ContactListItem';\n\nconst ContactList = () => {\n    const { contacts, pending, selectedTab } = useAppState((state) => state.contacts);\n    const [open, setOpen] = useState(false);\n    const [selectedContact, setSelectedContact] = useState(false);\n    const [modalStyle, setModalStyle] = useState({});\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getContacts());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const selectTab = (tab) => {\n        dispatch(setSelectedTab(tab));\n    };\n    const selectContact = (event, contact) => {\n        setOpen(true);\n        setModalStyle({ top: event.target.offsetTop + event.target.offsetHeight, left: event.target.offsetLeft, width: '500px' });\n        setSelectedContact(contact);\n    };\n\n    return (\n        <div className=\"d-flex\">\n            <div className=\"contact-list-container\">\n                <ContactListHeader contacts={contacts} selectTab={selectTab} selectedTab={selectedTab} />\n                <ul className=\"contact-list\">\n                    {pending\n                        ? new Array(10).fill(\"loading...\").map((value,index) => {\n                              return (\n                                  <li className=\"contact-list__item\" data-testid=\"loading-contacts\" key={index}>\n                                      <Skeleton />\n                                  </li>\n                              );\n                          })\n                        : contacts[selectedTab].map((contact) => {\n                              return (\n                                  <ContactListItem\n                                      contact={contact}\n                                      key={contact.id.value}\n                                      onClick={(event) => {\n                                          selectContact(event, contact);\n                                      }}\n                                  />\n                              );\n                          })}\n                </ul>\n\n                {/* <div className=\"contact-list-body\">\n                   \n                </div> */}\n                {open && <ContactDetail setOpen={setOpen} contact={selectedContact} modalStyle={modalStyle} />}\n            </div>\n        </div>\n    );\n};\nexport default ContactList;\n","import ContactList from \"components/ContactList/ContactList\";\nimport { AppContextProvider } from \"store/context/context\";\n\nfunction App() {\n  return (\n    <AppContextProvider>\n      <ContactList />\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/style.scss';\nimport 'react-loading-skeleton/dist/skeleton.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}